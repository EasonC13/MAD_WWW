{
    "quest": "// Decompiled by MAD\nmodule 0x3e88d43a310633152deef7d164dd4273eb2ce8b0ffc0d1ff597ab49fd88908d::quest {\n\n    // ----- Use Statements -----\n\n    use sui::object;\n    use sui::table;\n    use sui::tx_context;\n    use sui::package;\n    use sui::transfer;\n    use sui::clock;\n\n    // ----- Structs -----\n\n    struct QUEST has drop {\n        dummy_field: bool,\n    }\n\n    struct QuestCap has store, key {\n        id: object::UID,\n    }\n\n    struct QuestHouse has key {\n        id: object::UID,\n        claims: table::Table<address, bool>,\n        enabled: bool,\n    }\n\n    struct QuestPass has key {\n        id: object::UID,\n        referrer: address,\n        referee: address,\n        timestamp_ms: u64,\n    }\n\n    // ----- Functions -----\n\n    fun init(\n        quest: QUEST,\n        ctx: &mut tx_context::TxContext\n    ) {\n        package::claim_and_keep(quest, ctx);\n        let questHouse = QuestHouse {\n            id: object::new(ctx),\n            claims: table::new<address, bool>(ctx),\n            enabled: true,\n        };\n        transfer::share_object(questHouse);\n        let questCap = QuestCap {\n            id: object::new(ctx)\n        };\n        transfer::public_transfer(questCap, tx_context::sender(ctx));\n    }\n\n    public fun mint(\n        questHouse: &mut QuestHouse,\n        referrer: address,\n        clock: &clock::Clock,\n        ctx: &mut tx_context::TxContext\n    ) {\n        assert!(questHouse.enabled, 3);\n        assert!(\n            !table::contains(&questHouse.claims, tx_context::sender(ctx)),\n            1\n        );\n        assert!(referrer != tx_context::sender(ctx), 2);\n        table::add(\n            &mut questHouse.claims,\n            tx_context::sender(ctx),\n            true\n        );\n        let pass = QuestPass {\n            id: object::new(ctx),\n            referrer,\n            referee: tx_context::sender(ctx),\n            timestamp_ms: clock::timestamp_ms(clock),\n        };\n        transfer::transfer(pass, tx_context::sender(ctx));\n    }\n\n    public fun enable_claims(\n        questHouse: &mut QuestHouse,\n        questCap: &QuestCap\n    ) {\n        questHouse.enabled = true;\n    }\n\n    public fun disable_claims(\n        questHouse: &mut QuestHouse,\n        questCap: &QuestCap\n    ) {\n        questHouse.enabled = false;\n    }\n}"
}