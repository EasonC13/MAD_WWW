{
    "gameconnector": "// Decompiled by MAD\nmodule 0xd2fa4a0959abfe4a798761eb62886911505c02592be85f43943299a47c3684f9::gameconnector {\n\n    // ----- Use Statements -----\n\n    use sui::object;\n    use sui::tx_context;\n    use sui::transfer;\n    use sui::event;\n\n    // ----- Structs -----\n\n    struct AccessControl has key {\n        id: object::UID,\n        owner: address,\n        paused: bool,\n    }\n\n    struct UserJoinedGame has copy, drop {\n        game_id: u64,\n        user: address,\n        token_cost: u64,\n    }\n\n    // ----- Functions -----\n\n    fun init(ctx: &mut tx_context::TxContext) {\n        let ac = AccessControl {\n            id: object::new(ctx),\n            owner: tx_context::sender(ctx),\n            paused: false,\n        };\n        transfer::share_object(ac);\n    }\n\n    public entry fun joinGame(\n        accessControl: &AccessControl,\n        game_id: u64,\n        token_cost: u64,\n        ctx: &mut tx_context::TxContext\n    ) {\n        assert!(!accessControl.paused, 1);\n        let user_joined_game = UserJoinedGame {\n            game_id,\n            user: tx_context::sender(ctx),\n            token_cost,\n        };\n        event::emit<UserJoinedGame>(user_joined_game);\n    }\n\n    public entry fun pause(\n        accessControl: &mut AccessControl,\n        ctx: &mut tx_context::TxContext\n    ) {\n        assert!(accessControl.owner == tx_context::sender(ctx), 1);\n        accessControl.paused = true;\n    }\n\n    public entry fun unpause(\n        accessControl: &mut AccessControl,\n        ctx: &mut tx_context::TxContext\n    ) {\n        assert!(accessControl.owner == tx_context::sender(ctx), 1);\n        accessControl.paused = false;\n    }\n}"
}